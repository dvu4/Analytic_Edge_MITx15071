SST = sum((mean(pisa2009train$readingScore)-pisa2009test$readingScore)^2)
SST
mean(pisa2009train$readingScore)
R2 = 1-SSE/SST
R2
FluTrain = read.csv("FluTrain.csv")
summary(FluTrain)
str(FluTrain)
table(FluTrain$ILI)
table(FluTrain$ILI,FluTrain$Week,mac)
table(FluTrain$ILI,FluTrain$Week,max)
table(FluTrain$ILI,FluTrain$Week)
tapply(FluTrain$ILI,FluTrain$Week,max)
str(FluTrain)
sort(table(FluTrain$ILI,FluTrain$Week))
which.max(FluTrain$ILI)
FluTrain$Week[303]
FluTrain$ILI[303]
table(FluTrain$Week)
FluTrain$Week[303]
which.max(FluTrain$ILI)
FluTrain$ILI[303]
str(FluTrain)
which.max(FluTrain$Queries)
FluTrain$Queries[303]
FluTrain$Week[303]
hist(FluTrain$ILI)
plot(log(FluTrain$ILI),FluTrain$Queries)
plot(FluTrain$Queries,log(FluTrain$ILI))
plot(log(FluTrain$ILI),FluTrain$Queries)
plot(FluTrain$Queries,log(FluTrain$ILI))
FluTrend1 = lm(Queries ~ log(IL), data=FluTrain)
FluTrend1 = lm(Queries ~ log(ILI), data=FluTrain)
summary(FluTrend1)
cor(FluTrain$ILI,FluTrain$Queries)
a = cor(FluTrain$ILI,FluTrain$Queries)
a
r2 =0.709
r2
a^2
log(1/a)
exp^(-.5*a)
e^(-.5*a)
exp(2)
exp(-.5*a)
a = cor(log(FluTrain$ILI),FluTrain$Queries)
a
a^2
log(1/a)
exp(-.5*a)
r2
FluTest = read.csv("FluTest.csv")
summary(FluTest)
sst(FluTest)
str(FluTest)
str(FluTrain)
PredTest1 = exp(predict(FluTrend1,newdata=FluTest))
PredTest1
which(FluTest$Week == "March 11, 2012")
FluTest$Week
which(FluTest$Week == "2012-03-11")
which(FluTest$Week == "2012-03-11 - 2012-03-18")
which(FluTest$Week == "2012-03-11 - 2012-03-17")
FluTest$ILI[11]
summary(PredTest1)
str(PredTest1)
PredTest1[11]
nrow(PredTest1)
PredTest1
nrow(FluTest$Week)
dimension(FluTest$Week)
dim(FluTest$Week)
which(FluTest$Week == "2012-03-11 - 2012-03-17")
PredTest1[11]
FluTest$ILI[11]
nrow(FluTest)
FluTest$Week
PredTest1[11]
PredTest1
PredTest1[11]
2.187383 - 1.494098
(2.187383 - 1.494098)/1.494098
FluTest$ILI[11]
PredTest1[11]
SSE = sum((FluTest$ILI-PredTest1)^2)
SSE
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
PredTest1 = exp(predict(FluTrend1, newdata=FluTest))
SSE = sum((FluTest$ILI-PredTest1)^2)
SSE
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
FluTrend1 = lm(log(ILI) ~ Queries, data=FluTrain)
PredTest1 = exp(predict(FluTrend1,newdata=FluTest))
which(FluTest$Week == "2012-03-11 - 2012-03-17")
FluTest$ILI[11]
PredTest1[11]
SSE = sum((FluTest$ILI-PredTest1)^2)
SSE
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
install.packages(zoo)
install.packages("zoo")
library(zoo)
ILILag2 = lag(zoo(FluTrain$ILI),-2,na.pad=TRUE)
FluTrain$ILILag2 = coredata(ILILag2)
summary(FluTrain)
str(FluTrain)
?coredata
?lag
plot(log(FluTrain$ILILag2),log(FluTrain$ILI))
hist(FluTrain$ILILag2)
plot(log(FluTrain$ILILag2),log(FluTrain$ILI))
FluTrend2 = lm(log(ILI) ~ Queries + log(ILILag2),data=FluTrain)
summary(FluTrend2)
summary(FluTrend1)
ILILag2 = lag(zoo(FluTest$ILI),-2,na.pad=TRUE)
FluTest$ILILag2 = coredata(ILILag2)
str(FluTest)
str(FluTrain)
FluTrain$ILI[417]
FluTrain$ILI[416]
FluTest$ILI[1]
FluTest$ILILag2[1]
FluTest$ILILag2[2]
FluTest$ILILag2[1] = FluTrain$ILI[416]
FluTest$ILILag2[2] = FluTrain$ILI[417]
str(FluTest)
PredTest2 = exp(predict(FluTrend2,newdata=FluTest))
SSE = sum((FluTest$ILI-PredTest2)^2)
RMSE = sqrt(SSE/nrow(FluTest))
RMSE
?arima
data(state)
statedata = cbind(data.frame(state.x77), state.abb, state.area, state.center,  state.division, state.name, state.region)
str(statedata)
statedata = read.cvs("statedata.csv")
statedata = read.csv("statedata.csv")
str(statedata)
plot(statedata$x,statedata$y)
plot(statedata$y,statedata$x)
plot(statedata$x,statedata$y)
tapply(statedata$HS.Grad,statedata$state.region,max)
which.max(tapply(statedata$HS.Grad,statedata$state.region,max))
tapply(statedata$HS.Grad,statedata$state.region,mean)
?boxplot
boxplot(statedata$state.region,statedata$Murder)
boxplot(statedata$state.region,statedata$Murder)
boxplot(statedata$state.region,statedata$Murder)
boxplot(statedata$Murder,statedata$state.region)
boxplot(statedata$state.region,statedata$Murder)
boxplot(statedata$state.region)
boxplot(statedata$state.region)
boxplot(statedata$Murder)
boxplot(as.numeric(statedata$state.region),statedata$Murder)
boxplot(statedata$Murder ~ statedata$state.region)
NortheastData = subset(statedata, state.region == "Northeast")
NortheastData$Murder
NortheastData$state.abb
str(statedata)
lmLifeExp = lm(Life.Exp ~ Population + Income + Illiteracy + Murder + HS.Grad + Frost + Area,data=statedata)
summary(lmLifeExp)
1/-2.180e-05
plot(statedata$Income, statedata$Life.Exp)
lmLifeExp2 = step( lmLifeExp)
summary(lmLifeExp2)
summary(lmLifeExp)
predict(Life.Exp)
predict(lmLifeExp2)
predLifeExp = predict(lmLifeExp2)
predLifeExp
sort(table(statedata$state.abb,predLifeExp))
sort(table(statedata$state.abb,statedata$state.abb))
which.max(predLifeExp)
statedata$state.abb[47]
which.min(predLifeExp)
statedata$state.abb[1]
which.min(statedata$Life.Exp)
statedata$state.abb[40]
sort(predict(lmLifeExp2))
which.max(predLifeExp)
which.max(statedata$Life.Exp)
statedata$state.abb[11]
summary(predLifeExp)
str(predLifeExp)
predLifeExp
str(lmLifeExp2)
summary(lmLifeExp2)
which.min(lmLifeExp2$residuals)
statedata$state.abb[19]
which.max(lmLifeExp2$residuals)
statedata$state.abb[11]
elantra = read.csv("elantra.csv")
summary(elantra)
str(elantra)
elantra_train = subset(elantra,Year <= 2012)
elantra_test = subset(elantra,Year > 2012)
str(elantra_train)
str(elantra_test)
nrow(elantra_train)
lmElantraSales = lm(ElantraSales ~ Unemployment + Queries + CPI_energy + CPI_all,data= elantra_train)
summary(lmElantraSales)
lmElantraSales = lm(ElantraSales ~ Unemployment + Queries + CPI_energy + CPI_all + Month,data= elantra_train)
summary(lmElantraSales)
predSales = predict(lmElantraSales,newdata=elantra_test)
summary(predSales)
str(predSales)
predSales
str(elantra_test)
predSales[5] - predSales[1]
predSales[7] - predSales[1]
elantra_train$MonthFact = as.factor(elantra_train$Month)
str(elantra_train)
lmElantraSales = lm(ElantraSales ~ Unemployment + Queries + CPI_energy + CPI_all + MonthFact,data= elantra_train)
summary(lmElantraSales)
elantra_test$MonthFact = as.factor(elantra_test$Month)
cor(elantra_train)
cor(elantra_train$Queries,elantra_train$CPI_all)
cor(elantra_train$Queries,elantra_train$CPI_energy)
cor(elantra_train$Month,elantra_train$CPI_energy)
cor(elantra_train$Unemployment,elantra_train$CPI_energy)
cor(elantra_train$CPI_all,elantra_train$CPI_energy)
cor(ElantraTrain[c("Unemployment","Month","Queries","CPI_energy","CPI_all")])
cor(elantra_train[c("Unemployment","Month","Queries","CPI_energy","CPI_all")])
lmElantraSales2 = step(lmElantraSales)
summary(lmElantraSales2)
predSales = predict(lmElantraSales2,newdata=elantra_test)
summary(predSales)
str(predSales)
SSE = sum((predSales - elantra_test$ElantraSales)^2)
SSE
SST = sum((mean(elantra_train)-elantra_test$ElantraSales)^2)
SST = sum((mean(elantra_train$ElantraSales)-elantra_test$ElantraSales)^2)
SST
mean(elantra_train$ElantraSales)
R2 = 1 - SSE/SST
R2
str(predSales)
lmElantraSales2$residuals
which.max(lmElantraSales2$residuals)
nrow(elantra_test)
max(abs(predSales - elantra_test$ElantraSales))
which.max(abs(predSales - elantra_test$ElantraSales))
predSales - elantra_test$ElantraSale
elantra_test$Month[14]
elantra_test$Year[14]
elantra_test$Month[5]
elantra_test$Year[5]
which.max(abs(predSales - elantra_test$ElantraSales))
